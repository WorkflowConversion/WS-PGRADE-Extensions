<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.workflowconversion</groupId>
	<artifactId>WS-PGRADE-Portlets</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>WS-PGRADE Workflow Conversion Portlets</name>
	<url>https://github.com/WorkflowConversion/WS-PGRADE-Portlets</url>

	<!-- some of these are likely to change if a different WS-PGRADE version 
		is used -->
	<properties>
		<jaxws-rt.version>2.2.8</jaxws-rt.version>
		<guse.version>3.7.4</guse.version>
		<liferay.version>6.2.0-ga2</liferay.version>
		<asm.version>3.5</asm.version>
		<vaadin.version>7.4.3</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<tomcat.version>7.0.55</tomcat.version>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>

	<modules>
		<module>core-lib</module>
		<module>ui-components</module>
	 	<module>application-manager</module> 
		<!-- <module>workflow-importer</module> -->
	</modules>

	<!-- other repositories -->
	<repositories>
		<repository>
			<id>gUSE</id>
			<name>gUSE Maven repository</name>
			<url>http://guse.sztaki.hu/nexus/content/repositories/releases</url>
		</repository>
		<!-- At the time of release, the needed version of liferay's portal-service 
			was not found in the public maven repositories, so a in-project repository 
			was created containing the needed jar file -->
		<repository>
			<id>WorkflowConversion_local_repo</id>
			<name>Local project Maven repository</name>
			<url>${project.basedir}/lib/mvnrepo/</url>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- located in our local repository, used for imports in PortletUser in 
			core-lib -->
		<dependency>
			<groupId>com.liferay</groupId>
			<artifactId>portal-service</artifactId>
			<version>${liferay.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>asm_api</artifactId>
			<version>${asm.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>information_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>guse_client</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>logging_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>wfi_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>wfs_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>dcibridge_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>storage_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>portal_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>repository_cli</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>hu.sztaki.lpds.guse</groupId>
			<artifactId>frontendbase</artifactId>
			<version>${guse.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.xmlrpc</groupId>
			<artifactId>xmlrpc</artifactId>
			<version>2.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5-20081211</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>6.0.35</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>${jaxws-rt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.dspace</groupId>
			<artifactId>mets</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient-cache</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.globus</groupId>
			<artifactId>cog-jglobus</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.saxon</groupId>
			<artifactId>saxon</artifactId>
			<version>9.1.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20090211</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- UNICORE dependencies -->
		<dependency>
			<groupId>eu.unicore</groupId>
			<artifactId>uas-client</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>de.fzj.unicore.wsrflite</groupId>
			<artifactId>wsrflite</artifactId>
			<version>1.9.3</version>
			<exclusions>
				<!-- avoid transitory dependency on xmlbeans 2.2, since we're importing 
					version 2.4 -->
				<exclusion>
					<groupId>org.apache.xmlbeans</groupId>
					<artifactId>xmlbeans</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>eu.unicore.security</groupId>
			<artifactId>securityLibrary</artifactId>
			<version>2.0.4</version>
		</dependency>
		<!-- MySQL connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.32</version>
		</dependency>
		<!-- includes the PropertiesConfiguration, which allows us to automatically 
			refresh properties based on properties files -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- includes a database connection pool -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<!-- for cache usage -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<!-- for string comparison (there doesn't seem to be a deployed version 
			in any public maven repository, so this file is included in the lib/mvnrepo 
			folder -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.4</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<!-- make sure portlets (war files) get resource filtering -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<!-- vaadin portlets don't need a web.xml, but, as of gUSE 3.7.4, WS-PGRADE portlets need a web.xml -->
					<failOnMissingWebXml>true</failOnMissingWebXml>
					<packagingExcludes>%regex[WEB-INF/lib/bcprov-jdk.*],WEB-INF/lib/cog-jglobus-1.8.jar,%regex[WEB-INF/lib/cryptix.*],WEB-INF/lib/guava-13.0.1.jar,%regex[WEB-INF/lib/xbean.*],WEB-INF/lib/xmlbeans-2.5.0.jar,WEB-INF/classes/VAADIN/gwt-unitCache/**,WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
					<warName>${portlet.name}</warName>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/resources</directory>
							<includes>
								<include>logback.xml</include>
							</includes>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp/WEB-INF</directory>
							<includes>
								<include>liferay-display.xml</include>
								<include>liferay-plugin-package.xml</include>
								<include>liferay-portlet.xml</include>
								<include>portlet.xml</include>
								<include>sun-jaxws.xml</include>
								<include>web.xml</include>
							</includes>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself.
					See: https://dev.vaadin.com/ticket/8899 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>[${vaadin.plugin.version},)</versionRange>
										<goals>
											<goal>update-theme</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>compile-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>

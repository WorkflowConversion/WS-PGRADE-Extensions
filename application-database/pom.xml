<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.workflowconversion</groupId>
		<artifactId>WS-PGRADE-Extensions</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>application-database</artifactId>
	<packaging>war</packaging>
	<name>Application Database Extension</name>
	<url>https://github.com/WorkflowConversion/WS-PGRADE-Extensions</url>

	<dependencies>
		<dependency>
			<groupId>com.workflowconversion</groupId>
			<artifactId>core-lib</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.workflowconversion</groupId>
			<artifactId>ui-components</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
		</dependency>
		<!-- information_cli contains the InitAxisServices servlet which will be invoked
		     during initialization; this will set the properties in PropertyLoader -->
		<dependency>
				<groupId>hu.sztaki.lpds.guse</groupId>
				<artifactId>information_cli</artifactId>
			</dependency>
		<!-- these dependencies are needed to communicate with gUSE -->
		<dependency>
				<groupId>hu.sztaki.lpds.guse</groupId>
				<artifactId>wfs_cli</artifactId>
			</dependency>
			<dependency>
				<groupId>hu.sztaki.lpds.guse</groupId>
				<artifactId>frontendbase</artifactId>
			</dependency>
			<dependency>
				<groupId>hu.sztaki.lpds.guse</groupId>
				<artifactId>portal_cli</artifactId>
			</dependency>
		<!-- see comment on parent pom.xml regarding log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. See: https://dev.vaadin.com/ticket/8899 -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>com.vaadin</groupId>
									<artifactId>vaadin-maven-plugin</artifactId>
									<versionRange>[${vaadin.plugin.version},)</versionRange>
									<goals>
										<goal>update-theme</goal>
										<goal>update-widgetset</goal>
										<goal>compile</goal>
										<goal>compile-theme</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
			<!-- make sure portlets (war files) get resource filtering -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<!-- vaadin portlets don't need a web.xml, but, as of gUSE 3.7.4, WS-PGRADE 
						portlets need a web.xml -->
					<failOnMissingWebXml>true</failOnMissingWebXml>
					<packagingExcludes>%regex[WEB-INF/lib/bcprov-jdk.*],WEB-INF/lib/cog-jglobus-1.8.jar,%regex[WEB-INF/lib/cryptix.*],WEB-INF/lib/guava-13.0.1.jar,%regex[WEB-INF/lib/xbean.*],WEB-INF/lib/xmlbeans-2.5.0.jar,WEB-INF/classes/VAADIN/gwt-unitCache/**,WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
					<warName>${portlet.name}</warName>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/resources</directory>
							<includes>
								<include>logback.xml</include>
								<include>sample_resource_file.xml</include>
							</includes>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp/WEB-INF</directory>
							<includes>
								<include>liferay-display.xml</include>
								<include>liferay-plugin-package.xml</include>
								<include>liferay-portlet.xml</include>
								<include>portlet.xml</include>
								<include>sun-jaxws.xml</include>
								<include>web.xml</include>
							</includes>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.basedir}/build.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
